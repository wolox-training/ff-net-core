@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@using MvcMovie.Models.Views
@using MvcMovie.Models.Database
@using MvcMovie
@model MvcMovie.Models.Views.MovieGenreViewModel
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["HomePage"];
    ViewData["Create"] = Localizer["Create"];
}

<h2>@ViewData["Title"]</h2>

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>

        <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>
        Title: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-pageSize="@Model.pageSize" asp-route-pageIndex="@Model.PagedList.PageIndex">@Html.DisplayNameFor(model => model.Movies[0].Title)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ReleaseDateSortParam"]" asp-route-pageSize="@Model.pageSize" asp-route-pageIndex="@Model.PagedList.PageIndex">@Html.DisplayNameFor(model => model.Movies[0].ReleaseDate)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["GenreSortParam"]" asp-route-pageSize="@Model.pageSize" asp-route-pageIndex="@Model.PagedList.PageIndex">@Html.DisplayNameFor(model => model.Movies[0].Genre)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Rating)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.PagedList) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> | 
                <a asp-action="Email" asp-route-id="@item.Id">Email</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.PagedList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.PagedList.HasNextPage ? "disabled" : "";
}

<a asp-action="Index" asp-route-pageSize="@Model.pageSize" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-movieGenre="@ViewData["CurrentFilter"]" asp-route-pageNumber="@(Model.PagedList.PageIndex - 1)" class="btn btn-default @prevDisabled"> Previous </a>
<a asp-action="Index" asp-route-pageSize="@Model.pageSize" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-movieGenre="@ViewData["CurrentFilter"]" asp-route-pageNumber="@(Model.PagedList.PageIndex + 1)" class="btn btn-default @nextDisabled"> Next </a>
